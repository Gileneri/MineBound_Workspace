
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.mcreator.minebound.init;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.client.event.RegisterColorHandlersEvent;
import net.minecraftforge.api.distmarker.Dist;

import net.minecraft.world.level.block.Block;

import net.mcreator.minebound.block.YellowGlowRockBlock;
import net.mcreator.minebound.block.WreckedventBlock;
import net.mcreator.minebound.block.WreckedvendingmachineBlock;
import net.mcreator.minebound.block.WreckedcrateBlock;
import net.mcreator.minebound.block.WreckedcontrolpanelBlock;
import net.mcreator.minebound.block.WreckedconsoleBlock;
import net.mcreator.minebound.block.WreckedTVBlock;
import net.mcreator.minebound.block.WoodenWindowBlock;
import net.mcreator.minebound.block.WoodenLogBlock;
import net.mcreator.minebound.block.WoodenFenceCrossBlock;
import net.mcreator.minebound.block.WoodenFenceCross2Block;
import net.mcreator.minebound.block.WoodenFenceCornerBlock;
import net.mcreator.minebound.block.WoodenFenceBlock;
import net.mcreator.minebound.block.WoodenBridgeSlabBlock;
import net.mcreator.minebound.block.WoodenBridgeBlockBlock;
import net.mcreator.minebound.block.WoodenBlindsBlock;
import net.mcreator.minebound.block.WoodPanellingBlock;
import net.mcreator.minebound.block.WindowLatticeBlock;
import net.mcreator.minebound.block.WideventBlock;
import net.mcreator.minebound.block.WickerSupportSlabBlock;
import net.mcreator.minebound.block.WickerSupportBlockBlock;
import net.mcreator.minebound.block.WickerBlock;
import net.mcreator.minebound.block.WetDirtBlock;
import net.mcreator.minebound.block.WasteBlock;
import net.mcreator.minebound.block.WallSlabBlock;
import net.mcreator.minebound.block.WallPanelBlock;
import net.mcreator.minebound.block.WallBlockBlock;
import net.mcreator.minebound.block.VineBlockBlock;
import net.mcreator.minebound.block.UtilitypoleBlock;
import net.mcreator.minebound.block.UnrefinedWoodBlock;
import net.mcreator.minebound.block.UnrefinedMudstoneBlock;
import net.mcreator.minebound.block.UnrefinedLimestoneBlock;
import net.mcreator.minebound.block.UnrefinedGritstoneBlock;
import net.mcreator.minebound.block.UnrefinedGneissBlock;
import net.mcreator.minebound.block.UnrefinedDaciteBlock;
import net.mcreator.minebound.block.UnrefinedConglomerateBlock;
import net.mcreator.minebound.block.UnrefinedChertBlock;
import net.mcreator.minebound.block.UnrefinedArkoseBlock;
import net.mcreator.minebound.block.UnrefinedAndesiteBlock;
import net.mcreator.minebound.block.UnmarkedTombBricksWallBlock;
import net.mcreator.minebound.block.UnmarkedTombBricksBlock;
import net.mcreator.minebound.block.TungstenSlabBlock;
import net.mcreator.minebound.block.TungstenBlockBlock;
import net.mcreator.minebound.block.TreatedWoodBlock;
import net.mcreator.minebound.block.TreasureHoardBlock;
import net.mcreator.minebound.block.TrashcanBlock;
import net.mcreator.minebound.block.ToxicwastebarrelBlock;
import net.mcreator.minebound.block.TombBricksSlabBlock;
import net.mcreator.minebound.block.TombBricksBlock;
import net.mcreator.minebound.block.TitaniumPanelBlock;
import net.mcreator.minebound.block.TimberBlock;
import net.mcreator.minebound.block.ThicksnowBlock;
import net.mcreator.minebound.block.ThickOrnateWoodBlock;
import net.mcreator.minebound.block.TheblockBlock;
import net.mcreator.minebound.block.ThatchSlabBlock;
import net.mcreator.minebound.block.ThatchBlock;
import net.mcreator.minebound.block.TestRedstoneOnBlock;
import net.mcreator.minebound.block.TestRedstoneOffBlock;
import net.mcreator.minebound.block.TestPressurePlateBlock;
import net.mcreator.minebound.block.TestLightOnBlock;
import net.mcreator.minebound.block.TestLightOffBlock;
import net.mcreator.minebound.block.TestLightBlockBlock;
import net.mcreator.minebound.block.TestDoorBlock;
import net.mcreator.minebound.block.TestButtonBlock;
import net.mcreator.minebound.block.TentacleClusterBlock;
import net.mcreator.minebound.block.TempleStairsBlock;
import net.mcreator.minebound.block.TempleSlabBlock;
import net.mcreator.minebound.block.TempleBrickswallBlock;
import net.mcreator.minebound.block.TempleBricksSlabBlock;
import net.mcreator.minebound.block.TempleBricksBlock;
import net.mcreator.minebound.block.TempleBlockBlock;
import net.mcreator.minebound.block.TarTestBlock;
import net.mcreator.minebound.block.TarOilBlock;
import net.mcreator.minebound.block.TarBlock;
import net.mcreator.minebound.block.TackyWallpaperPanelBlock;
import net.mcreator.minebound.block.TackyWallpaperBlockBlock;
import net.mcreator.minebound.block.SwampWaterBlock;
import net.mcreator.minebound.block.SuppliesShelfBlock;
import net.mcreator.minebound.block.StripedWoodBlock;
import net.mcreator.minebound.block.StonerubbleBlock;
import net.mcreator.minebound.block.StoneTilesBlock;
import net.mcreator.minebound.block.StickySlimeBlock;
import net.mcreator.minebound.block.SoftBricksBlock;
import net.mcreator.minebound.block.SodSlabBlock;
import net.mcreator.minebound.block.SodBlockBlock;
import net.mcreator.minebound.block.SmoothiceBlock;
import net.mcreator.minebound.block.SmoothcobblestoneBlock;
import net.mcreator.minebound.block.SmoothTombBricksSlabBlock;
import net.mcreator.minebound.block.SmoothTombBricksBlock;
import net.mcreator.minebound.block.SmoothPlatedBlockBlock;
import net.mcreator.minebound.block.SmoothMetalBlock;
import net.mcreator.minebound.block.SmashedscreenBlock;
import net.mcreator.minebound.block.SmallventBlock;
import net.mcreator.minebound.block.SmallrustedcrateBlock;
import net.mcreator.minebound.block.SmallbrokenmirrorBlock;
import net.mcreator.minebound.block.SmallTombBricksSlabBlock;
import net.mcreator.minebound.block.SmallTombBricksBlock;
import net.mcreator.minebound.block.SmallTempleBricksWallBlock;
import net.mcreator.minebound.block.SmallTempleBricksSlabBlock;
import net.mcreator.minebound.block.SmallTempleBricksBlock;
import net.mcreator.minebound.block.SmallStoneBricksWallBlock;
import net.mcreator.minebound.block.SmallStoneBricksSlabBlock;
import net.mcreator.minebound.block.SmallStoneBricksBlock;
import net.mcreator.minebound.block.SlushBlock;
import net.mcreator.minebound.block.SlopedrustpanelBlock;
import net.mcreator.minebound.block.SlimeGlobBlock;
import net.mcreator.minebound.block.SleekdarkpanelBlock;
import net.mcreator.minebound.block.SimpleTempleStairsBlock;
import net.mcreator.minebound.block.SimpleTempleSlabBlock;
import net.mcreator.minebound.block.SimpleTempleBlockBlock;
import net.mcreator.minebound.block.SilverBlockBlock;
import net.mcreator.minebound.block.SignTopBlock;
import net.mcreator.minebound.block.SignPoleBlock;
import net.mcreator.minebound.block.ShojiScreenStairsBlock;
import net.mcreator.minebound.block.ShojiScreenSlabBlock;
import net.mcreator.minebound.block.ShojiScreenPanelBlock;
import net.mcreator.minebound.block.ShojiScreenBlockBlock;
import net.mcreator.minebound.block.ShipThickSuppotBlock;
import net.mcreator.minebound.block.ShipSupportSlabBlock;
import net.mcreator.minebound.block.ShipSupportBlockBlock;
import net.mcreator.minebound.block.ShadowSpikedSlabBlock;
import net.mcreator.minebound.block.ShadowSpikedBlockBlock;
import net.mcreator.minebound.block.ShadowRockStairsBlock;
import net.mcreator.minebound.block.ShadowRockSlabBlock;
import net.mcreator.minebound.block.ShadowRockBlock;
import net.mcreator.minebound.block.ShadowBricksStairsBlock;
import net.mcreator.minebound.block.ShadowBricksSlabBlock;
import net.mcreator.minebound.block.ShadowBricksBlockBlock;
import net.mcreator.minebound.block.ScorchedtiresBlock;
import net.mcreator.minebound.block.ScorchedtapummeBlock;
import net.mcreator.minebound.block.ScorchedplatingBlock;
import net.mcreator.minebound.block.ScorchedhazardtapeBlock;
import net.mcreator.minebound.block.ScorchedgrassBlock;
import net.mcreator.minebound.block.ScorchedcargoplatingBlock;
import net.mcreator.minebound.block.ScorchedDebrisBlock;
import net.mcreator.minebound.block.ScorchedBushBlock;
import net.mcreator.minebound.block.ScorchedBenchBlock;
import net.mcreator.minebound.block.SandstoneBricksStairsBlock;
import net.mcreator.minebound.block.SandstoneBricksSlabBlock;
import net.mcreator.minebound.block.SandstoneBricksBlock;
import net.mcreator.minebound.block.SandBlock;
import net.mcreator.minebound.block.RustywallBlock;
import net.mcreator.minebound.block.RustyshowerBlock;
import net.mcreator.minebound.block.RustyscafoldingBlock;
import net.mcreator.minebound.block.RustymetalplaquestairsBlock;
import net.mcreator.minebound.block.RustymetalplaqueslabBlock;
import net.mcreator.minebound.block.RustymetalplaquesBlock;
import net.mcreator.minebound.block.RustylockerBlock;
import net.mcreator.minebound.block.RustygrateBlock;
import net.mcreator.minebound.block.RustydoublecabinetBlock;
import net.mcreator.minebound.block.RustycabinetBlock;
import net.mcreator.minebound.block.RustyboltedplatesBlock;
import net.mcreator.minebound.block.RustyMetalSlabBlock;
import net.mcreator.minebound.block.RustyMetalBlock;
import net.mcreator.minebound.block.RustyBlockBlock;
import net.mcreator.minebound.block.RustedwatertankBlock;
import net.mcreator.minebound.block.RustedplatesBlock;
import net.mcreator.minebound.block.RustedoilbarrelBlock;
import net.mcreator.minebound.block.RustedcrateBlock;
import net.mcreator.minebound.block.RustedchairBlock;
import net.mcreator.minebound.block.RustedchainlinkfenceBlock;
import net.mcreator.minebound.block.RustedboilerBlock;
import net.mcreator.minebound.block.RustedbarsBlock;
import net.mcreator.minebound.block.RustedTableBlock;
import net.mcreator.minebound.block.RustedBrokenFanBlock;
import net.mcreator.minebound.block.RoughsandstoneBlock;
import net.mcreator.minebound.block.RockBricksBlock;
import net.mcreator.minebound.block.RivetrustyplatingBlock;
import net.mcreator.minebound.block.RivetlessrustypanelBlock;
import net.mcreator.minebound.block.RidgeSlabBlock;
import net.mcreator.minebound.block.RidgeBlockBlock;
import net.mcreator.minebound.block.ReinforcedTechBlockSlabBlock;
import net.mcreator.minebound.block.ReinforcedTechBlockBlock;
import net.mcreator.minebound.block.ReedBlockSlabBlock;
import net.mcreator.minebound.block.ReedBlockBlock;
import net.mcreator.minebound.block.RawSewageBlock;
import net.mcreator.minebound.block.RainbowWoodPlanksBlock;
import net.mcreator.minebound.block.PressurisedThickGirderBlock;
import net.mcreator.minebound.block.PressurisedThickBeamBlock;
import net.mcreator.minebound.block.PressurisedGirderSlabBlock;
import net.mcreator.minebound.block.PressurisedGirderBlockBlock;
import net.mcreator.minebound.block.PressurisedDurasteelSlabBlock;
import net.mcreator.minebound.block.PressurisedDurasteelPanelBlock;
import net.mcreator.minebound.block.PressurisedDurasteelBlock;
import net.mcreator.minebound.block.PressurisedBeamSlabBlock;
import net.mcreator.minebound.block.PressurisedBeamBlockBlock;
import net.mcreator.minebound.block.PoletopBlock;
import net.mcreator.minebound.block.PoisonBlock;
import net.mcreator.minebound.block.PlatinumBlockBlock;
import net.mcreator.minebound.block.PlantMatterBlock;
import net.mcreator.minebound.block.PlantBlockSlabBlock;
import net.mcreator.minebound.block.PlantBlockBlock;
import net.mcreator.minebound.block.PipefenceBlock;
import net.mcreator.minebound.block.PillarBlockTopBlock;
import net.mcreator.minebound.block.PillarBlockMiddleBlock;
import net.mcreator.minebound.block.PillarBlockBottomBlock;
import net.mcreator.minebound.block.PillarBlockBlock;
import net.mcreator.minebound.block.PileOfEyesBlock;
import net.mcreator.minebound.block.PileOfBooksBlock;
import net.mcreator.minebound.block.PetalBlocksBlock;
import net.mcreator.minebound.block.PapersBlock;
import net.mcreator.minebound.block.PaintedBricksBlock;
import net.mcreator.minebound.block.PackedDirtBlock;
import net.mcreator.minebound.block.PackedBonesBlock;
import net.mcreator.minebound.block.OutpostWallSlabBlock;
import net.mcreator.minebound.block.OutpostWallBlockBlock;
import net.mcreator.minebound.block.OutpostThickSupportBeamBlock;
import net.mcreator.minebound.block.OutpostSupportWallSlabsBlock;
import net.mcreator.minebound.block.OutpostSupportThickwallBlock;
import net.mcreator.minebound.block.OutpostSupportBeamSlabBlock;
import net.mcreator.minebound.block.OutpostSupportBeamBlockBlock;
import net.mcreator.minebound.block.OutpostConcreteWallBlock;
import net.mcreator.minebound.block.OutpostConcreteSlabBlock;
import net.mcreator.minebound.block.OutpostConcreteBlock;
import net.mcreator.minebound.block.OrnatewoodBlockBlock;
import net.mcreator.minebound.block.OrnateWallSlabBlock;
import net.mcreator.minebound.block.OrnateWallPanelBlock;
import net.mcreator.minebound.block.OrnateWallBlock;
import net.mcreator.minebound.block.OrnateTilesSlabBlock;
import net.mcreator.minebound.block.OrnateTilesBlock;
import net.mcreator.minebound.block.OrnateRoofingStairsBlock;
import net.mcreator.minebound.block.OrnateRoofingSlabBlock;
import net.mcreator.minebound.block.OrnateRoofingBlock;
import net.mcreator.minebound.block.OrnateFlooringStairsBlock;
import net.mcreator.minebound.block.OrnateFlooringSlabBlock;
import net.mcreator.minebound.block.OrnateFlooringBlock;
import net.mcreator.minebound.block.OldpapersBlock;
import net.mcreator.minebound.block.Oldpapers3Block;
import net.mcreator.minebound.block.Oldpapers2Block;
import net.mcreator.minebound.block.Oldpapers1Block;
import net.mcreator.minebound.block.OldglasspaneBlock;
import net.mcreator.minebound.block.OldglassBlock;
import net.mcreator.minebound.block.OldbedBlock;
import net.mcreator.minebound.block.ObsidianBlock;
import net.mcreator.minebound.block.NeonBlockBlock;
import net.mcreator.minebound.block.MushroomBlockBlock;
import net.mcreator.minebound.block.MudBlock;
import net.mcreator.minebound.block.MossyPackedDirtBlock;
import net.mcreator.minebound.block.MoonstoneBlock;
import net.mcreator.minebound.block.MoonrockBlock;
import net.mcreator.minebound.block.MoonDustBlock;
import net.mcreator.minebound.block.MirrorBlockBlock;
import net.mcreator.minebound.block.MeteoriterockBlock;
import net.mcreator.minebound.block.MetalsheetsBlock;
import net.mcreator.minebound.block.MetalplaquestairsBlock;
import net.mcreator.minebound.block.MetalplaqueslabBlock;
import net.mcreator.minebound.block.MetalplaquesBlock;
import net.mcreator.minebound.block.MetaliccolumnBlock;
import net.mcreator.minebound.block.MetalRailingSlabBlock;
import net.mcreator.minebound.block.MetalRailingBlock;
import net.mcreator.minebound.block.MetalBarsBlock;
import net.mcreator.minebound.block.MatterBlockBlock;
import net.mcreator.minebound.block.MakeshiftmetalsheetsBlock;
import net.mcreator.minebound.block.MagmarockBlock;
import net.mcreator.minebound.block.LunarBaseBlockSlabBlock;
import net.mcreator.minebound.block.LunarBaseBlockBlock;
import net.mcreator.minebound.block.LoosesiltBlock;
import net.mcreator.minebound.block.LittletableBlock;
import net.mcreator.minebound.block.LiquidErchiusFuelBlock;
import net.mcreator.minebound.block.LimestoneBlock;
import net.mcreator.minebound.block.LightMetalSlabBlock;
import net.mcreator.minebound.block.LightMetalBlock;
import net.mcreator.minebound.block.LavaBlock;
import net.mcreator.minebound.block.LargebrokenmirrorBlock;
import net.mcreator.minebound.block.JunkpileBlock;
import net.mcreator.minebound.block.JunkTechBlock;
import net.mcreator.minebound.block.JellyblobBlock;
import net.mcreator.minebound.block.IronBlockSlabBlock;
import net.mcreator.minebound.block.IronBlockBlock;
import net.mcreator.minebound.block.IcematerialBlock;
import net.mcreator.minebound.block.IceblockBlock;
import net.mcreator.minebound.block.HorizontalwreckedventBlock;
import net.mcreator.minebound.block.HiveblockBlock;
import net.mcreator.minebound.block.HitechBlockBlock;
import net.mcreator.minebound.block.HeavyStoneBricksStairsBlock;
import net.mcreator.minebound.block.HeavyStoneBricksSlabBlock;
import net.mcreator.minebound.block.HeavyStoneBricksBlock;
import net.mcreator.minebound.block.HeavyIronBarsBlock;
import net.mcreator.minebound.block.HealingWaterBlock;
import net.mcreator.minebound.block.HazardBlockBlock;
import net.mcreator.minebound.block.HangingwiresBlock;
import net.mcreator.minebound.block.GrayplatedmetalBlock;
import net.mcreator.minebound.block.GrassyStairsBlock;
import net.mcreator.minebound.block.GrassySlabBlock;
import net.mcreator.minebound.block.GrassyRockBlock;
import net.mcreator.minebound.block.GraniteRockBlock;
import net.mcreator.minebound.block.GoldBlockBlock;
import net.mcreator.minebound.block.GlyphBlockBlock;
import net.mcreator.minebound.block.GlassBlockBlock;
import net.mcreator.minebound.block.GeodestoneBlock;
import net.mcreator.minebound.block.GeodecrystalsBlock;
import net.mcreator.minebound.block.GenerateInDepth6Block;
import net.mcreator.minebound.block.GenerateInDepth5Block;
import net.mcreator.minebound.block.GenerateInDepth4Block;
import net.mcreator.minebound.block.GenerateInDepth3Block;
import net.mcreator.minebound.block.GenerateInDepth2Block;
import net.mcreator.minebound.block.GenerateInDepth1Block;
import net.mcreator.minebound.block.FrozendirtBlock;
import net.mcreator.minebound.block.FlowerBlockBlock;
import net.mcreator.minebound.block.FlickeringlightbulbBlock;
import net.mcreator.minebound.block.FleshpileBlock;
import net.mcreator.minebound.block.FleshchunkBlock;
import net.mcreator.minebound.block.ErodedmetalpanelsBlock;
import net.mcreator.minebound.block.ErchiusCrystalSlabBlock;
import net.mcreator.minebound.block.ErchiusCrystalBlock;
import net.mcreator.minebound.block.DustywoodBlock;
import net.mcreator.minebound.block.DustywireboxBlock;
import net.mcreator.minebound.block.DustygrateBlock;
import net.mcreator.minebound.block.DustycircuitBlock;
import net.mcreator.minebound.block.DumpsterBlock;
import net.mcreator.minebound.block.DrysandBlock;
import net.mcreator.minebound.block.DryrockBlock;
import net.mcreator.minebound.block.DrydirtBlock;
import net.mcreator.minebound.block.DirtmaterialBlock;
import net.mcreator.minebound.block.DirestoneBlock;
import net.mcreator.minebound.block.DiagonalwreckedventBlock;
import net.mcreator.minebound.block.DecayedshelfBlock;
import net.mcreator.minebound.block.DebrisslabBlock;
import net.mcreator.minebound.block.DeadcoreBlock;
import net.mcreator.minebound.block.DarkglasspaneBlock;
import net.mcreator.minebound.block.DarkglassBlock;
import net.mcreator.minebound.block.DarkTombBricksSlabBlock;
import net.mcreator.minebound.block.DarkTombBricksBlock;
import net.mcreator.minebound.block.DarkSmoothStoneStairsBlock;
import net.mcreator.minebound.block.DarkSmoothStoneSlabBlock;
import net.mcreator.minebound.block.DarkSmoothStoneBlock;
import net.mcreator.minebound.block.CrystalBlockBlock;
import net.mcreator.minebound.block.CorruptdirtBlock;
import net.mcreator.minebound.block.CoreLavaBlock;
import net.mcreator.minebound.block.CopperWindowBlock;
import net.mcreator.minebound.block.CopperRoofingStairsBlock;
import net.mcreator.minebound.block.CopperRoofingSlabBlock;
import net.mcreator.minebound.block.CopperRoofingBlock;
import net.mcreator.minebound.block.CopperGearBlockBlock;
import net.mcreator.minebound.block.CopperFenceCorner3Block;
import net.mcreator.minebound.block.CopperFenceCorner2Block;
import net.mcreator.minebound.block.CopperFenceCorner1Block;
import net.mcreator.minebound.block.CopperFenceBlock;
import net.mcreator.minebound.block.ConcreteStairsBlock;
import net.mcreator.minebound.block.ConcreteBlockSlabBlock;
import net.mcreator.minebound.block.ConcreteBlockBlock;
import net.mcreator.minebound.block.CoconutMilkBlock;
import net.mcreator.minebound.block.CobblestoneBricksBlock;
import net.mcreator.minebound.block.CoarsegravelBlock;
import net.mcreator.minebound.block.CloudBlock;
import net.mcreator.minebound.block.ClayBlock;
import net.mcreator.minebound.block.ClassicwallpaperBlock;
import net.mcreator.minebound.block.ClassicWalpaperPanelBlock;
import net.mcreator.minebound.block.ClassicBasebordSlabBlock;
import net.mcreator.minebound.block.ClassicBaseboardBlock;
import net.mcreator.minebound.block.CharredmetalplatingBlock;
import net.mcreator.minebound.block.CharredmetalplatesBlock;
import net.mcreator.minebound.block.ChainlinkfenceBlock;
import net.mcreator.minebound.block.CactiBlock;
import net.mcreator.minebound.block.CabinroofingBlock;
import net.mcreator.minebound.block.CabinRoofingStairsBlock;
import net.mcreator.minebound.block.CabinRoofingSlabBlock;
import net.mcreator.minebound.block.BrokenwoodenchairBlock;
import net.mcreator.minebound.block.BrokentrafficpoleBlock;
import net.mcreator.minebound.block.BrokentrafficlightsBlock;
import net.mcreator.minebound.block.BrokenterminalBlock;
import net.mcreator.minebound.block.BrokentelevisionsetBlock;
import net.mcreator.minebound.block.BrokentableBlock;
import net.mcreator.minebound.block.BrokensmalldrawerBlock;
import net.mcreator.minebound.block.BrokenregisterBlock;
import net.mcreator.minebound.block.BrokenradiocabinetBlock;
import net.mcreator.minebound.block.BrokenfridgeBlock;
import net.mcreator.minebound.block.BrokeneletricboxBlock;
import net.mcreator.minebound.block.BrokencounterBlock;
import net.mcreator.minebound.block.BricksBlock;
import net.mcreator.minebound.block.BrainsBlock;
import net.mcreator.minebound.block.BlueglowrockBlock;
import net.mcreator.minebound.block.BlockWaterBlock;
import net.mcreator.minebound.block.BlockTarOilBlock;
import net.mcreator.minebound.block.BlockSwampWaterBlock;
import net.mcreator.minebound.block.BlockStickSlimeBlock;
import net.mcreator.minebound.block.BlockPoisonBlock;
import net.mcreator.minebound.block.BlockLavaBlock;
import net.mcreator.minebound.block.BlockHealingWaterBlock;
import net.mcreator.minebound.block.BlockErchiusFuelBlock;
import net.mcreator.minebound.block.BlockCoconutMilkBlock;
import net.mcreator.minebound.block.BlaststoneBlock;
import net.mcreator.minebound.block.BlackglassBlock;
import net.mcreator.minebound.block.BlackBlockBlock;
import net.mcreator.minebound.block.BigbrokendrawerBlock;
import net.mcreator.minebound.block.BasictoiletBlock;
import net.mcreator.minebound.block.BarSupportBlock;
import net.mcreator.minebound.block.BambooStairsBlock;
import net.mcreator.minebound.block.BambooSlabBlock;
import net.mcreator.minebound.block.BambooBlock;
import net.mcreator.minebound.block.AviantechblockBlock;
import net.mcreator.minebound.block.AsteroidMeteoriterockBlock;
import net.mcreator.minebound.block.AsteroidMagmarockBlock;
import net.mcreator.minebound.block.AsphaltSlabBlock;
import net.mcreator.minebound.block.AsphaltBlock;
import net.mcreator.minebound.block.AshBlock;
import net.mcreator.minebound.block.AncientStairsBlock;
import net.mcreator.minebound.block.AncientSlabBlock;
import net.mcreator.minebound.block.AncientBrickSlabBlock;
import net.mcreator.minebound.block.AncientBrickBlockBlock;
import net.mcreator.minebound.block.AncientBlockBlock;
import net.mcreator.minebound.block.AlienrockBlock;
import net.mcreator.minebound.MineboundMod;

public class MineboundModBlocks {
	public static final DeferredRegister<Block> REGISTRY = DeferredRegister.create(ForgeRegistries.BLOCKS, MineboundMod.MODID);
	public static final RegistryObject<Block> POISON = REGISTRY.register("poison", () -> new PoisonBlock());
	public static final RegistryObject<Block> TEST_BUTTON = REGISTRY.register("test_button", () -> new TestButtonBlock());
	public static final RegistryObject<Block> TEST_DOOR = REGISTRY.register("test_door", () -> new TestDoorBlock());
	public static final RegistryObject<Block> TEST_PRESSURE_PLATE = REGISTRY.register("test_pressure_plate", () -> new TestPressurePlateBlock());
	public static final RegistryObject<Block> TEST_LIGHT_OFF = REGISTRY.register("test_light_off", () -> new TestLightOffBlock());
	public static final RegistryObject<Block> TEST_LIGHT_ON = REGISTRY.register("test_light_on", () -> new TestLightOnBlock());
	public static final RegistryObject<Block> TEST_REDSTONE_OFF = REGISTRY.register("test_redstone_off", () -> new TestRedstoneOffBlock());
	public static final RegistryObject<Block> TEST_REDSTONE_ON = REGISTRY.register("test_redstone_on", () -> new TestRedstoneOnBlock());
	public static final RegistryObject<Block> ALIENROCK = REGISTRY.register("alienrock", () -> new AlienrockBlock());
	public static final RegistryObject<Block> ASH = REGISTRY.register("ash", () -> new AshBlock());
	public static final RegistryObject<Block> BLASTSTONE = REGISTRY.register("blaststone", () -> new BlaststoneBlock());
	public static final RegistryObject<Block> BLUEGLOWROCK = REGISTRY.register("blueglowrock", () -> new BlueglowrockBlock());
	public static final RegistryObject<Block> BRAINS = REGISTRY.register("brains", () -> new BrainsBlock());
	public static final RegistryObject<Block> CLAY = REGISTRY.register("clay", () -> new ClayBlock());
	public static final RegistryObject<Block> SMOOTHCOBBLESTONE = REGISTRY.register("smoothcobblestone", () -> new SmoothcobblestoneBlock());
	public static final RegistryObject<Block> CORRUPTDIRT = REGISTRY.register("corruptdirt", () -> new CorruptdirtBlock());
	public static final RegistryObject<Block> DIRESTONE = REGISTRY.register("direstone", () -> new DirestoneBlock());
	public static final RegistryObject<Block> DIRTMATERIAL = REGISTRY.register("dirtmaterial", () -> new DirtmaterialBlock());
	public static final RegistryObject<Block> DRYDIRT = REGISTRY.register("drydirt", () -> new DrydirtBlock());
	public static final RegistryObject<Block> DRYSAND = REGISTRY.register("drysand", () -> new DrysandBlock());
	public static final RegistryObject<Block> FLESHCHUNK = REGISTRY.register("fleshchunk", () -> new FleshchunkBlock());
	public static final RegistryObject<Block> FLESHPILE = REGISTRY.register("fleshpile", () -> new FleshpileBlock());
	public static final RegistryObject<Block> FROZENDIRT = REGISTRY.register("frozendirt", () -> new FrozendirtBlock());
	public static final RegistryObject<Block> GEODECRYSTALS = REGISTRY.register("geodecrystals", () -> new GeodecrystalsBlock());
	public static final RegistryObject<Block> GEODESTONE = REGISTRY.register("geodestone", () -> new GeodestoneBlock());
	public static final RegistryObject<Block> COARSEGRAVEL = REGISTRY.register("coarsegravel", () -> new CoarsegravelBlock());
	public static final RegistryObject<Block> HIVEBLOCK = REGISTRY.register("hiveblock", () -> new HiveblockBlock());
	public static final RegistryObject<Block> ICEMATERIAL = REGISTRY.register("icematerial", () -> new IcematerialBlock());
	public static final RegistryObject<Block> ICEBLOCK = REGISTRY.register("iceblock", () -> new IceblockBlock());
	public static final RegistryObject<Block> JELLYBLOB = REGISTRY.register("jellyblob", () -> new JellyblobBlock());
	public static final RegistryObject<Block> JUNKPILE = REGISTRY.register("junkpile", () -> new JunkpileBlock());
	public static final RegistryObject<Block> LIMESTONE = REGISTRY.register("limestone", () -> new LimestoneBlock());
	public static final RegistryObject<Block> LOOSESILT = REGISTRY.register("loosesilt", () -> new LoosesiltBlock());
	public static final RegistryObject<Block> MAGMAROCK = REGISTRY.register("magmarock", () -> new MagmarockBlock());
	public static final RegistryObject<Block> METEORITEROCK = REGISTRY.register("meteoriterock", () -> new MeteoriterockBlock());
	public static final RegistryObject<Block> MOON_DUST = REGISTRY.register("moon_dust", () -> new MoonDustBlock());
	public static final RegistryObject<Block> MOONROCK = REGISTRY.register("moonrock", () -> new MoonrockBlock());
	public static final RegistryObject<Block> MOONSTONE = REGISTRY.register("moonstone", () -> new MoonstoneBlock());
	public static final RegistryObject<Block> MUD = REGISTRY.register("mud", () -> new MudBlock());
	public static final RegistryObject<Block> OBSIDIAN = REGISTRY.register("obsidian", () -> new ObsidianBlock());
	public static final RegistryObject<Block> PLANT_MATTER = REGISTRY.register("plant_matter", () -> new PlantMatterBlock());
	public static final RegistryObject<Block> SAND = REGISTRY.register("sand", () -> new SandBlock());
	public static final RegistryObject<Block> ROUGHSANDSTONE = REGISTRY.register("roughsandstone", () -> new RoughsandstoneBlock());
	public static final RegistryObject<Block> SLIME_GLOB = REGISTRY.register("slime_glob", () -> new SlimeGlobBlock());
	public static final RegistryObject<Block> SLUSH = REGISTRY.register("slush", () -> new SlushBlock());
	public static final RegistryObject<Block> SMOOTHICE = REGISTRY.register("smoothice", () -> new SmoothiceBlock());
	public static final RegistryObject<Block> THICKSNOW = REGISTRY.register("thicksnow", () -> new ThicksnowBlock());
	public static final RegistryObject<Block> STONERUBBLE = REGISTRY.register("stonerubble", () -> new StonerubbleBlock());
	public static final RegistryObject<Block> STRIPED_WOOD = REGISTRY.register("striped_wood", () -> new StripedWoodBlock());
	public static final RegistryObject<Block> TAR = REGISTRY.register("tar", () -> new TarBlock());
	public static final RegistryObject<Block> TENTACLE_CLUSTER = REGISTRY.register("tentacle_cluster", () -> new TentacleClusterBlock());
	public static final RegistryObject<Block> VINE_BLOCK = REGISTRY.register("vine_block", () -> new VineBlockBlock());
	public static final RegistryObject<Block> WASTE = REGISTRY.register("waste", () -> new WasteBlock());
	public static final RegistryObject<Block> WET_DIRT = REGISTRY.register("wet_dirt", () -> new WetDirtBlock());
	public static final RegistryObject<Block> WOODEN_LOG = REGISTRY.register("wooden_log", () -> new WoodenLogBlock());
	public static final RegistryObject<Block> YELLOW_GLOW_ROCK = REGISTRY.register("yellow_glow_rock", () -> new YellowGlowRockBlock());
	public static final RegistryObject<Block> UNREFINED_MUDSTONE = REGISTRY.register("unrefined_mudstone", () -> new UnrefinedMudstoneBlock());
	public static final RegistryObject<Block> UNREFINED_ANDESITE = REGISTRY.register("unrefined_andesite", () -> new UnrefinedAndesiteBlock());
	public static final RegistryObject<Block> UNREFINED_DACITE = REGISTRY.register("unrefined_dacite", () -> new UnrefinedDaciteBlock());
	public static final RegistryObject<Block> UNREFINED_GNEISS = REGISTRY.register("unrefined_gneiss", () -> new UnrefinedGneissBlock());
	public static final RegistryObject<Block> UNREFINED_LIMESTONE = REGISTRY.register("unrefined_limestone", () -> new UnrefinedLimestoneBlock());
	public static final RegistryObject<Block> GRANITE_ROCK = REGISTRY.register("granite_rock", () -> new GraniteRockBlock());
	public static final RegistryObject<Block> UNREFINED_CHERT = REGISTRY.register("unrefined_chert", () -> new UnrefinedChertBlock());
	public static final RegistryObject<Block> UNREFINED_GRITSTONE = REGISTRY.register("unrefined_gritstone", () -> new UnrefinedGritstoneBlock());
	public static final RegistryObject<Block> UNREFINED_CONGLOMERATE = REGISTRY.register("unrefined_conglomerate", () -> new UnrefinedConglomerateBlock());
	public static final RegistryObject<Block> UNREFINED_ARKOSE = REGISTRY.register("unrefined_arkose", () -> new UnrefinedArkoseBlock());
	public static final RegistryObject<Block> PACKED_BONES = REGISTRY.register("packed_bones", () -> new PackedBonesBlock());
	public static final RegistryObject<Block> DEADCORE = REGISTRY.register("deadcore", () -> new DeadcoreBlock());
	public static final RegistryObject<Block> CLOUD = REGISTRY.register("cloud", () -> new CloudBlock());
	public static final RegistryObject<Block> ASTEROID_MAGMAROCK = REGISTRY.register("asteroid_magmarock", () -> new AsteroidMagmarockBlock());
	public static final RegistryObject<Block> TAR_TEST = REGISTRY.register("tar_test", () -> new TarTestBlock());
	public static final RegistryObject<Block> THEBLOCK = REGISTRY.register("theblock", () -> new TheblockBlock());
	public static final RegistryObject<Block> ASPHALT = REGISTRY.register("asphalt", () -> new AsphaltBlock());
	public static final RegistryObject<Block> ASPHALT_SLAB = REGISTRY.register("asphalt_slab", () -> new AsphaltSlabBlock());
	public static final RegistryObject<Block> BRICKS = REGISTRY.register("bricks", () -> new BricksBlock());
	public static final RegistryObject<Block> CABINROOFING = REGISTRY.register("cabinroofing", () -> new CabinroofingBlock());
	public static final RegistryObject<Block> CABIN_ROOFING_STAIRS = REGISTRY.register("cabin_roofing_stairs", () -> new CabinRoofingStairsBlock());
	public static final RegistryObject<Block> CABIN_ROOFING_SLAB = REGISTRY.register("cabin_roofing_slab", () -> new CabinRoofingSlabBlock());
	public static final RegistryObject<Block> COBBLESTONE_BRICKS = REGISTRY.register("cobblestone_bricks", () -> new CobblestoneBricksBlock());
	public static final RegistryObject<Block> COPPER_GEAR_BLOCK = REGISTRY.register("copper_gear_block", () -> new CopperGearBlockBlock());
	public static final RegistryObject<Block> COPPER_ROOFING = REGISTRY.register("copper_roofing", () -> new CopperRoofingBlock());
	public static final RegistryObject<Block> COPPER_ROOFING_STAIRS = REGISTRY.register("copper_roofing_stairs", () -> new CopperRoofingStairsBlock());
	public static final RegistryObject<Block> COPPER_ROOFING_SLAB = REGISTRY.register("copper_roofing_slab", () -> new CopperRoofingSlabBlock());
	public static final RegistryObject<Block> CRYSTAL_BLOCK = REGISTRY.register("crystal_block", () -> new CrystalBlockBlock());
	public static final RegistryObject<Block> GLASS_BLOCK = REGISTRY.register("glass_block", () -> new GlassBlockBlock());
	public static final RegistryObject<Block> IRON_BLOCK = REGISTRY.register("iron_block", () -> new IronBlockBlock());
	public static final RegistryObject<Block> GOLD_BLOCK = REGISTRY.register("gold_block", () -> new GoldBlockBlock());
	public static final RegistryObject<Block> MUSHROOM_BLOCK = REGISTRY.register("mushroom_block", () -> new MushroomBlockBlock());
	public static final RegistryObject<Block> PACKED_DIRT = REGISTRY.register("packed_dirt", () -> new PackedDirtBlock());
	public static final RegistryObject<Block> PILE_OF_EYES = REGISTRY.register("pile_of_eyes", () -> new PileOfEyesBlock());
	public static final RegistryObject<Block> PLATINUM_BLOCK = REGISTRY.register("platinum_block", () -> new PlatinumBlockBlock());
	public static final RegistryObject<Block> RAINBOW_WOOD_PLANKS = REGISTRY.register("rainbow_wood_planks", () -> new RainbowWoodPlanksBlock());
	public static final RegistryObject<Block> REED_BLOCK = REGISTRY.register("reed_block", () -> new ReedBlockBlock());
	public static final RegistryObject<Block> REED_BLOCK_SLAB = REGISTRY.register("reed_block_slab", () -> new ReedBlockSlabBlock());
	public static final RegistryObject<Block> SILVER_BLOCK = REGISTRY.register("silver_block", () -> new SilverBlockBlock());
	public static final RegistryObject<Block> SMOOTH_METAL = REGISTRY.register("smooth_metal", () -> new SmoothMetalBlock());
	public static final RegistryObject<Block> SMOOTH_PLATED_BLOCK = REGISTRY.register("smooth_plated_block", () -> new SmoothPlatedBlockBlock());
	public static final RegistryObject<Block> TIMBER = REGISTRY.register("timber", () -> new TimberBlock());
	public static final RegistryObject<Block> TITANIUM_PANEL = REGISTRY.register("titanium_panel", () -> new TitaniumPanelBlock());
	public static final RegistryObject<Block> TREASURE_HOARD = REGISTRY.register("treasure_hoard", () -> new TreasureHoardBlock());
	public static final RegistryObject<Block> TREATED_WOOD = REGISTRY.register("treated_wood", () -> new TreatedWoodBlock());
	public static final RegistryObject<Block> TUNGSTEN_BLOCK = REGISTRY.register("tungsten_block", () -> new TungstenBlockBlock());
	public static final RegistryObject<Block> TUNGSTEN_SLAB = REGISTRY.register("tungsten_slab", () -> new TungstenSlabBlock());
	public static final RegistryObject<Block> AVIANTECHBLOCK = REGISTRY.register("aviantechblock", () -> new AviantechblockBlock());
	public static final RegistryObject<Block> BAMBOO = REGISTRY.register("bamboo", () -> new BambooBlock());
	public static final RegistryObject<Block> BAMBOO_STAIRS = REGISTRY.register("bamboo_stairs", () -> new BambooStairsBlock());
	public static final RegistryObject<Block> BAMBOO_SLAB = REGISTRY.register("bamboo_slab", () -> new BambooSlabBlock());
	public static final RegistryObject<Block> BLACKGLASS = REGISTRY.register("blackglass", () -> new BlackglassBlock());
	public static final RegistryObject<Block> CACTI = REGISTRY.register("cacti", () -> new CactiBlock());
	public static final RegistryObject<Block> CLASSIC_BASEBOARD = REGISTRY.register("classic_baseboard", () -> new ClassicBaseboardBlock());
	public static final RegistryObject<Block> CLASSIC_BASEBORD_SLAB = REGISTRY.register("classic_basebord_slab", () -> new ClassicBasebordSlabBlock());
	public static final RegistryObject<Block> CLASSICWALLPAPER = REGISTRY.register("classicwallpaper", () -> new ClassicwallpaperBlock());
	public static final RegistryObject<Block> CLASSIC_WALPAPER_PANEL = REGISTRY.register("classic_walpaper_panel", () -> new ClassicWalpaperPanelBlock());
	public static final RegistryObject<Block> CONCRETE_BLOCK = REGISTRY.register("concrete_block", () -> new ConcreteBlockBlock());
	public static final RegistryObject<Block> CONCRETE_STAIRS = REGISTRY.register("concrete_stairs", () -> new ConcreteStairsBlock());
	public static final RegistryObject<Block> CONCRETE_BLOCK_SLAB = REGISTRY.register("concrete_block_slab", () -> new ConcreteBlockSlabBlock());
	public static final RegistryObject<Block> DARK_SMOOTH_STONE = REGISTRY.register("dark_smooth_stone", () -> new DarkSmoothStoneBlock());
	public static final RegistryObject<Block> DARK_SMOOTH_STONE_STAIRS = REGISTRY.register("dark_smooth_stone_stairs", () -> new DarkSmoothStoneStairsBlock());
	public static final RegistryObject<Block> DARK_SMOOTH_STONE_SLAB = REGISTRY.register("dark_smooth_stone_slab", () -> new DarkSmoothStoneSlabBlock());
	public static final RegistryObject<Block> DARK_TOMB_BRICKS = REGISTRY.register("dark_tomb_bricks", () -> new DarkTombBricksBlock());
	public static final RegistryObject<Block> DARK_TOMB_BRICKS_SLAB = REGISTRY.register("dark_tomb_bricks_slab", () -> new DarkTombBricksSlabBlock());
	public static final RegistryObject<Block> FLOWER_BLOCK = REGISTRY.register("flower_block", () -> new FlowerBlockBlock());
	public static final RegistryObject<Block> HAZARD_BLOCK = REGISTRY.register("hazard_block", () -> new HazardBlockBlock());
	public static final RegistryObject<Block> HEAVY_IRON_BARS = REGISTRY.register("heavy_iron_bars", () -> new HeavyIronBarsBlock());
	public static final RegistryObject<Block> HEAVY_STONE_BRICKS = REGISTRY.register("heavy_stone_bricks", () -> new HeavyStoneBricksBlock());
	public static final RegistryObject<Block> HEAVY_STONE_BRICKS_STAIRS = REGISTRY.register("heavy_stone_bricks_stairs", () -> new HeavyStoneBricksStairsBlock());
	public static final RegistryObject<Block> HEAVY_STONE_BRICKS_SLAB = REGISTRY.register("heavy_stone_bricks_slab", () -> new HeavyStoneBricksSlabBlock());
	public static final RegistryObject<Block> HITECH_BLOCK = REGISTRY.register("hitech_block", () -> new HitechBlockBlock());
	public static final RegistryObject<Block> JUNK_TECH = REGISTRY.register("junk_tech", () -> new JunkTechBlock());
	public static final RegistryObject<Block> LIGHT_METAL = REGISTRY.register("light_metal", () -> new LightMetalBlock());
	public static final RegistryObject<Block> LIGHT_METAL_SLAB = REGISTRY.register("light_metal_slab", () -> new LightMetalSlabBlock());
	public static final RegistryObject<Block> LUNAR_BASE_BLOCK = REGISTRY.register("lunar_base_block", () -> new LunarBaseBlockBlock());
	public static final RegistryObject<Block> LUNAR_BASE_BLOCK_SLAB = REGISTRY.register("lunar_base_block_slab", () -> new LunarBaseBlockSlabBlock());
	public static final RegistryObject<Block> METAL_BARS = REGISTRY.register("metal_bars", () -> new MetalBarsBlock());
	public static final RegistryObject<Block> METAL_RAILING = REGISTRY.register("metal_railing", () -> new MetalRailingBlock());
	public static final RegistryObject<Block> METAL_RAILING_SLAB = REGISTRY.register("metal_railing_slab", () -> new MetalRailingSlabBlock());
	public static final RegistryObject<Block> MIRROR_BLOCK = REGISTRY.register("mirror_block", () -> new MirrorBlockBlock());
	public static final RegistryObject<Block> MOSSY_PACKED_DIRT = REGISTRY.register("mossy_packed_dirt", () -> new MossyPackedDirtBlock());
	public static final RegistryObject<Block> ORNATE_FLOORING = REGISTRY.register("ornate_flooring", () -> new OrnateFlooringBlock());
	public static final RegistryObject<Block> ORNATE_FLOORING_STAIRS = REGISTRY.register("ornate_flooring_stairs", () -> new OrnateFlooringStairsBlock());
	public static final RegistryObject<Block> ORNATE_FLOORING_SLAB = REGISTRY.register("ornate_flooring_slab", () -> new OrnateFlooringSlabBlock());
	public static final RegistryObject<Block> ORNATE_ROOFING = REGISTRY.register("ornate_roofing", () -> new OrnateRoofingBlock());
	public static final RegistryObject<Block> ORNATE_ROOFING_STAIRS = REGISTRY.register("ornate_roofing_stairs", () -> new OrnateRoofingStairsBlock());
	public static final RegistryObject<Block> ORNATE_ROOFING_SLAB = REGISTRY.register("ornate_roofing_slab", () -> new OrnateRoofingSlabBlock());
	public static final RegistryObject<Block> ORNATE_TILES = REGISTRY.register("ornate_tiles", () -> new OrnateTilesBlock());
	public static final RegistryObject<Block> ORNATE_TILES_SLAB = REGISTRY.register("ornate_tiles_slab", () -> new OrnateTilesSlabBlock());
	public static final RegistryObject<Block> ORNATE_WALL = REGISTRY.register("ornate_wall", () -> new OrnateWallBlock());
	public static final RegistryObject<Block> ORNATE_WALL_SLAB = REGISTRY.register("ornate_wall_slab", () -> new OrnateWallSlabBlock());
	public static final RegistryObject<Block> ORNATE_WALL_PANEL = REGISTRY.register("ornate_wall_panel", () -> new OrnateWallPanelBlock());
	public static final RegistryObject<Block> ORNATEWOOD_BLOCK = REGISTRY.register("ornatewood_block", () -> new OrnatewoodBlockBlock());
	public static final RegistryObject<Block> THICK_ORNATE_WOOD = REGISTRY.register("thick_ornate_wood", () -> new ThickOrnateWoodBlock());
	public static final RegistryObject<Block> OUTPOST_CONCRETE = REGISTRY.register("outpost_concrete", () -> new OutpostConcreteBlock());
	public static final RegistryObject<Block> OUTPOST_CONCRETE_WALL = REGISTRY.register("outpost_concrete_wall", () -> new OutpostConcreteWallBlock());
	public static final RegistryObject<Block> OUTPOST_CONCRETE_SLAB = REGISTRY.register("outpost_concrete_slab", () -> new OutpostConcreteSlabBlock());
	public static final RegistryObject<Block> OUTPOST_SUPPORT_BEAM_BLOCK = REGISTRY.register("outpost_support_beam_block", () -> new OutpostSupportBeamBlockBlock());
	public static final RegistryObject<Block> OUTPOST_THICK_SUPPORT_BEAM = REGISTRY.register("outpost_thick_support_beam", () -> new OutpostThickSupportBeamBlock());
	public static final RegistryObject<Block> OUTPOST_SUPPORT_BEAM_SLAB = REGISTRY.register("outpost_support_beam_slab", () -> new OutpostSupportBeamSlabBlock());
	public static final RegistryObject<Block> OUTPOST_SUPPORT_THICKWALL = REGISTRY.register("outpost_support_thickwall", () -> new OutpostSupportThickwallBlock());
	public static final RegistryObject<Block> OUTPOST_SUPPORT_WALL_SLABS = REGISTRY.register("outpost_support_wall_slabs", () -> new OutpostSupportWallSlabsBlock());
	public static final RegistryObject<Block> OUTPOST_WALL_BLOCK = REGISTRY.register("outpost_wall_block", () -> new OutpostWallBlockBlock());
	public static final RegistryObject<Block> OUTPOST_WALL_SLAB = REGISTRY.register("outpost_wall_slab", () -> new OutpostWallSlabBlock());
	public static final RegistryObject<Block> PAINTED_BRICKS = REGISTRY.register("painted_bricks", () -> new PaintedBricksBlock());
	public static final RegistryObject<Block> PETAL_BLOCKS = REGISTRY.register("petal_blocks", () -> new PetalBlocksBlock());
	public static final RegistryObject<Block> PILE_OF_BOOKS = REGISTRY.register("pile_of_books", () -> new PileOfBooksBlock());
	public static final RegistryObject<Block> PRESSURISED_BEAM_BLOCK = REGISTRY.register("pressurised_beam_block", () -> new PressurisedBeamBlockBlock());
	public static final RegistryObject<Block> PRESSURISED_THICK_BEAM = REGISTRY.register("pressurised_thick_beam", () -> new PressurisedThickBeamBlock());
	public static final RegistryObject<Block> PRESSURISED_BEAM_SLAB = REGISTRY.register("pressurised_beam_slab", () -> new PressurisedBeamSlabBlock());
	public static final RegistryObject<Block> PRESSURISED_DURASTEEL = REGISTRY.register("pressurised_durasteel", () -> new PressurisedDurasteelBlock());
	public static final RegistryObject<Block> PRESSURISED_DURASTEEL_SLAB = REGISTRY.register("pressurised_durasteel_slab", () -> new PressurisedDurasteelSlabBlock());
	public static final RegistryObject<Block> PRESSURISED_DURASTEEL_PANEL = REGISTRY.register("pressurised_durasteel_panel", () -> new PressurisedDurasteelPanelBlock());
	public static final RegistryObject<Block> PRESSURISED_GIRDER_BLOCK = REGISTRY.register("pressurised_girder_block", () -> new PressurisedGirderBlockBlock());
	public static final RegistryObject<Block> PRESSURISED_THICK_GIRDER = REGISTRY.register("pressurised_thick_girder", () -> new PressurisedThickGirderBlock());
	public static final RegistryObject<Block> PRESSURISED_GIRDER_SLAB = REGISTRY.register("pressurised_girder_slab", () -> new PressurisedGirderSlabBlock());
	public static final RegistryObject<Block> REINFORCED_TECH_BLOCK = REGISTRY.register("reinforced_tech_block", () -> new ReinforcedTechBlockBlock());
	public static final RegistryObject<Block> REINFORCED_TECH_BLOCK_SLAB = REGISTRY.register("reinforced_tech_block_slab", () -> new ReinforcedTechBlockSlabBlock());
	public static final RegistryObject<Block> ROCK_BRICKS = REGISTRY.register("rock_bricks", () -> new RockBricksBlock());
	public static final RegistryObject<Block> RUSTY_METAL = REGISTRY.register("rusty_metal", () -> new RustyMetalBlock());
	public static final RegistryObject<Block> RUSTY_METAL_SLAB = REGISTRY.register("rusty_metal_slab", () -> new RustyMetalSlabBlock());
	public static final RegistryObject<Block> SANDSTONE_BRICKS = REGISTRY.register("sandstone_bricks", () -> new SandstoneBricksBlock());
	public static final RegistryObject<Block> SANDSTONE_BRICKS_STAIRS = REGISTRY.register("sandstone_bricks_stairs", () -> new SandstoneBricksStairsBlock());
	public static final RegistryObject<Block> SANDSTONE_BRICKS_SLAB = REGISTRY.register("sandstone_bricks_slab", () -> new SandstoneBricksSlabBlock());
	public static final RegistryObject<Block> SHADOW_BRICKS_BLOCK = REGISTRY.register("shadow_bricks_block", () -> new ShadowBricksBlockBlock());
	public static final RegistryObject<Block> SHADOW_BRICKS_STAIRS = REGISTRY.register("shadow_bricks_stairs", () -> new ShadowBricksStairsBlock());
	public static final RegistryObject<Block> SHADOW_BRICKS_SLAB = REGISTRY.register("shadow_bricks_slab", () -> new ShadowBricksSlabBlock());
	public static final RegistryObject<Block> SHADOW_SPIKED_BLOCK = REGISTRY.register("shadow_spiked_block", () -> new ShadowSpikedBlockBlock());
	public static final RegistryObject<Block> SHADOW_SPIKED_SLAB = REGISTRY.register("shadow_spiked_slab", () -> new ShadowSpikedSlabBlock());
	public static final RegistryObject<Block> SHIP_SUPPORT_BLOCK = REGISTRY.register("ship_support_block", () -> new ShipSupportBlockBlock());
	public static final RegistryObject<Block> SHIP_THICK_SUPPOT = REGISTRY.register("ship_thick_suppot", () -> new ShipThickSuppotBlock());
	public static final RegistryObject<Block> SHIP_SUPPORT_SLAB = REGISTRY.register("ship_support_slab", () -> new ShipSupportSlabBlock());
	public static final RegistryObject<Block> SHOJI_SCREEN_BLOCK = REGISTRY.register("shoji_screen_block", () -> new ShojiScreenBlockBlock());
	public static final RegistryObject<Block> SHOJI_SCREEN_STAIRS = REGISTRY.register("shoji_screen_stairs", () -> new ShojiScreenStairsBlock());
	public static final RegistryObject<Block> SHOJI_SCREEN_SLAB = REGISTRY.register("shoji_screen_slab", () -> new ShojiScreenSlabBlock());
	public static final RegistryObject<Block> SHOJI_SCREEN_PANEL = REGISTRY.register("shoji_screen_panel", () -> new ShojiScreenPanelBlock());
	public static final RegistryObject<Block> SIMPLE_TEMPLE_BLOCK = REGISTRY.register("simple_temple_block", () -> new SimpleTempleBlockBlock());
	public static final RegistryObject<Block> SIMPLE_TEMPLE_STAIRS = REGISTRY.register("simple_temple_stairs", () -> new SimpleTempleStairsBlock());
	public static final RegistryObject<Block> SIMPLE_TEMPLE_SLAB = REGISTRY.register("simple_temple_slab", () -> new SimpleTempleSlabBlock());
	public static final RegistryObject<Block> SMALL_STONE_BRICKS = REGISTRY.register("small_stone_bricks", () -> new SmallStoneBricksBlock());
	public static final RegistryObject<Block> SMALL_STONE_BRICKS_SLAB = REGISTRY.register("small_stone_bricks_slab", () -> new SmallStoneBricksSlabBlock());
	public static final RegistryObject<Block> SMALL_STONE_BRICKS_WALL = REGISTRY.register("small_stone_bricks_wall", () -> new SmallStoneBricksWallBlock());
	public static final RegistryObject<Block> SMALL_TEMPLE_BRICKS = REGISTRY.register("small_temple_bricks", () -> new SmallTempleBricksBlock());
	public static final RegistryObject<Block> SMALL_TEMPLE_BRICKS_SLAB = REGISTRY.register("small_temple_bricks_slab", () -> new SmallTempleBricksSlabBlock());
	public static final RegistryObject<Block> SMALL_TEMPLE_BRICKS_WALL = REGISTRY.register("small_temple_bricks_wall", () -> new SmallTempleBricksWallBlock());
	public static final RegistryObject<Block> SMALL_TOMB_BRICKS = REGISTRY.register("small_tomb_bricks", () -> new SmallTombBricksBlock());
	public static final RegistryObject<Block> SMALL_TOMB_BRICKS_SLAB = REGISTRY.register("small_tomb_bricks_slab", () -> new SmallTombBricksSlabBlock());
	public static final RegistryObject<Block> SMOOTH_TOMB_BRICKS = REGISTRY.register("smooth_tomb_bricks", () -> new SmoothTombBricksBlock());
	public static final RegistryObject<Block> SMOOTH_TOMB_BRICKS_SLAB = REGISTRY.register("smooth_tomb_bricks_slab", () -> new SmoothTombBricksSlabBlock());
	public static final RegistryObject<Block> SOFT_BRICKS = REGISTRY.register("soft_bricks", () -> new SoftBricksBlock());
	public static final RegistryObject<Block> STONE_TILES = REGISTRY.register("stone_tiles", () -> new StoneTilesBlock());
	public static final RegistryObject<Block> TACKY_WALLPAPER_BLOCK = REGISTRY.register("tacky_wallpaper_block", () -> new TackyWallpaperBlockBlock());
	public static final RegistryObject<Block> TACKY_WALLPAPER_PANEL = REGISTRY.register("tacky_wallpaper_panel", () -> new TackyWallpaperPanelBlock());
	public static final RegistryObject<Block> TEMPLE_BLOCK = REGISTRY.register("temple_block", () -> new TempleBlockBlock());
	public static final RegistryObject<Block> TEMPLE_STAIRS = REGISTRY.register("temple_stairs", () -> new TempleStairsBlock());
	public static final RegistryObject<Block> TEMPLE_SLAB = REGISTRY.register("temple_slab", () -> new TempleSlabBlock());
	public static final RegistryObject<Block> TEMPLE_BRICKS = REGISTRY.register("temple_bricks", () -> new TempleBricksBlock());
	public static final RegistryObject<Block> TEMPLE_BRICKS_SLAB = REGISTRY.register("temple_bricks_slab", () -> new TempleBricksSlabBlock());
	public static final RegistryObject<Block> TEMPLE_BRICKSWALL = REGISTRY.register("temple_brickswall", () -> new TempleBrickswallBlock());
	public static final RegistryObject<Block> THATCH = REGISTRY.register("thatch", () -> new ThatchBlock());
	public static final RegistryObject<Block> THATCH_SLAB = REGISTRY.register("thatch_slab", () -> new ThatchSlabBlock());
	public static final RegistryObject<Block> TOMB_BRICKS = REGISTRY.register("tomb_bricks", () -> new TombBricksBlock());
	public static final RegistryObject<Block> TOMB_BRICKS_SLAB = REGISTRY.register("tomb_bricks_slab", () -> new TombBricksSlabBlock());
	public static final RegistryObject<Block> UNMARKED_TOMB_BRICKS = REGISTRY.register("unmarked_tomb_bricks", () -> new UnmarkedTombBricksBlock());
	public static final RegistryObject<Block> UNMARKED_TOMB_BRICKS_WALL = REGISTRY.register("unmarked_tomb_bricks_wall", () -> new UnmarkedTombBricksWallBlock());
	public static final RegistryObject<Block> UNREFINED_WOOD = REGISTRY.register("unrefined_wood", () -> new UnrefinedWoodBlock());
	public static final RegistryObject<Block> WALL_BLOCK = REGISTRY.register("wall_block", () -> new WallBlockBlock());
	public static final RegistryObject<Block> WALL_SLAB = REGISTRY.register("wall_slab", () -> new WallSlabBlock());
	public static final RegistryObject<Block> WALL_PANEL = REGISTRY.register("wall_panel", () -> new WallPanelBlock());
	public static final RegistryObject<Block> WICKER = REGISTRY.register("wicker", () -> new WickerBlock());
	public static final RegistryObject<Block> WICKER_SUPPORT_BLOCK = REGISTRY.register("wicker_support_block", () -> new WickerSupportBlockBlock());
	public static final RegistryObject<Block> WICKER_SUPPORT_SLAB = REGISTRY.register("wicker_support_slab", () -> new WickerSupportSlabBlock());
	public static final RegistryObject<Block> WOOD_PANELLING = REGISTRY.register("wood_panelling", () -> new WoodPanellingBlock());
	public static final RegistryObject<Block> WOODEN_BRIDGE_BLOCK = REGISTRY.register("wooden_bridge_block", () -> new WoodenBridgeBlockBlock());
	public static final RegistryObject<Block> WOODEN_BRIDGE_SLAB = REGISTRY.register("wooden_bridge_slab", () -> new WoodenBridgeSlabBlock());
	public static final RegistryObject<Block> GLYPH_BLOCK = REGISTRY.register("glyph_block", () -> new GlyphBlockBlock());
	public static final RegistryObject<Block> NEON_BLOCK = REGISTRY.register("neon_block", () -> new NeonBlockBlock());
	public static final RegistryObject<Block> PLANT_BLOCK = REGISTRY.register("plant_block", () -> new PlantBlockBlock());
	public static final RegistryObject<Block> PLANT_BLOCK_SLAB = REGISTRY.register("plant_block_slab", () -> new PlantBlockSlabBlock());
	public static final RegistryObject<Block> RUSTY_BLOCK = REGISTRY.register("rusty_block", () -> new RustyBlockBlock());
	public static final RegistryObject<Block> WINDOW_LATTICE = REGISTRY.register("window_lattice", () -> new WindowLatticeBlock());
	public static final RegistryObject<Block> WOODEN_BLINDS = REGISTRY.register("wooden_blinds", () -> new WoodenBlindsBlock());
	public static final RegistryObject<Block> WOODEN_WINDOW = REGISTRY.register("wooden_window", () -> new WoodenWindowBlock());
	public static final RegistryObject<Block> COPPER_WINDOW = REGISTRY.register("copper_window", () -> new CopperWindowBlock());
	public static final RegistryObject<Block> ANCIENT_BLOCK = REGISTRY.register("ancient_block", () -> new AncientBlockBlock());
	public static final RegistryObject<Block> ANCIENT_STAIRS = REGISTRY.register("ancient_stairs", () -> new AncientStairsBlock());
	public static final RegistryObject<Block> ANCIENT_SLAB = REGISTRY.register("ancient_slab", () -> new AncientSlabBlock());
	public static final RegistryObject<Block> ANCIENT_BRICK_BLOCK = REGISTRY.register("ancient_brick_block", () -> new AncientBrickBlockBlock());
	public static final RegistryObject<Block> ANCIENT_BRICK_SLAB = REGISTRY.register("ancient_brick_slab", () -> new AncientBrickSlabBlock());
	public static final RegistryObject<Block> GRASSY_ROCK = REGISTRY.register("grassy_rock", () -> new GrassyRockBlock());
	public static final RegistryObject<Block> GRASSY_STAIRS = REGISTRY.register("grassy_stairs", () -> new GrassyStairsBlock());
	public static final RegistryObject<Block> GRASSY_SLAB = REGISTRY.register("grassy_slab", () -> new GrassySlabBlock());
	public static final RegistryObject<Block> ERCHIUS_CRYSTAL = REGISTRY.register("erchius_crystal", () -> new ErchiusCrystalBlock());
	public static final RegistryObject<Block> ERCHIUS_CRYSTAL_SLAB = REGISTRY.register("erchius_crystal_slab", () -> new ErchiusCrystalSlabBlock());
	public static final RegistryObject<Block> MATTER_BLOCK = REGISTRY.register("matter_block", () -> new MatterBlockBlock());
	public static final RegistryObject<Block> RAW_SEWAGE = REGISTRY.register("raw_sewage", () -> new RawSewageBlock());
	public static final RegistryObject<Block> RIDGE_BLOCK = REGISTRY.register("ridge_block", () -> new RidgeBlockBlock());
	public static final RegistryObject<Block> RIDGE_SLAB = REGISTRY.register("ridge_slab", () -> new RidgeSlabBlock());
	public static final RegistryObject<Block> SHADOW_ROCK = REGISTRY.register("shadow_rock", () -> new ShadowRockBlock());
	public static final RegistryObject<Block> SHADOW_ROCK_STAIRS = REGISTRY.register("shadow_rock_stairs", () -> new ShadowRockStairsBlock());
	public static final RegistryObject<Block> SHADOW_ROCK_SLAB = REGISTRY.register("shadow_rock_slab", () -> new ShadowRockSlabBlock());
	public static final RegistryObject<Block> SOD_BLOCK = REGISTRY.register("sod_block", () -> new SodBlockBlock());
	public static final RegistryObject<Block> SOD_SLAB = REGISTRY.register("sod_slab", () -> new SodSlabBlock());
	public static final RegistryObject<Block> TEST_LIGHT_BLOCK = REGISTRY.register("test_light_block", () -> new TestLightBlockBlock());
	public static final RegistryObject<Block> CORE_LAVA = REGISTRY.register("core_lava", () -> new CoreLavaBlock());
	public static final RegistryObject<Block> COPPER_FENCE = REGISTRY.register("copper_fence", () -> new CopperFenceBlock());
	public static final RegistryObject<Block> COPPER_FENCE_CORNER_1 = REGISTRY.register("copper_fence_corner_1", () -> new CopperFenceCorner1Block());
	public static final RegistryObject<Block> COPPER_FENCE_CORNER_2 = REGISTRY.register("copper_fence_corner_2", () -> new CopperFenceCorner2Block());
	public static final RegistryObject<Block> COPPER_FENCE_CORNER_3 = REGISTRY.register("copper_fence_corner_3", () -> new CopperFenceCorner3Block());
	public static final RegistryObject<Block> WOODEN_FENCE = REGISTRY.register("wooden_fence", () -> new WoodenFenceBlock());
	public static final RegistryObject<Block> WOODEN_FENCE_CORNER = REGISTRY.register("wooden_fence_corner", () -> new WoodenFenceCornerBlock());
	public static final RegistryObject<Block> WOODEN_FENCE_CROSS = REGISTRY.register("wooden_fence_cross", () -> new WoodenFenceCrossBlock());
	public static final RegistryObject<Block> WOODEN_FENCE_CROSS_2 = REGISTRY.register("wooden_fence_cross_2", () -> new WoodenFenceCross2Block());
	public static final RegistryObject<Block> BLACK_BLOCK = REGISTRY.register("black_block", () -> new BlackBlockBlock());
	public static final RegistryObject<Block> PILLAR_BLOCK = REGISTRY.register("pillar_block", () -> new PillarBlockBlock());
	public static final RegistryObject<Block> PILLAR_BLOCK_BOTTOM = REGISTRY.register("pillar_block_bottom", () -> new PillarBlockBottomBlock());
	public static final RegistryObject<Block> PILLAR_BLOCK_MIDDLE = REGISTRY.register("pillar_block_middle", () -> new PillarBlockMiddleBlock());
	public static final RegistryObject<Block> PILLAR_BLOCK_TOP = REGISTRY.register("pillar_block_top", () -> new PillarBlockTopBlock());
	public static final RegistryObject<Block> LIQUID_ERCHIUS_FUEL = REGISTRY.register("liquid_erchius_fuel", () -> new LiquidErchiusFuelBlock());
	public static final RegistryObject<Block> STICKY_SLIME = REGISTRY.register("sticky_slime", () -> new StickySlimeBlock());
	public static final RegistryObject<Block> TAR_OIL = REGISTRY.register("tar_oil", () -> new TarOilBlock());
	public static final RegistryObject<Block> SWAMP_WATER = REGISTRY.register("swamp_water", () -> new SwampWaterBlock());
	public static final RegistryObject<Block> BLOCK_ERCHIUS_FUEL = REGISTRY.register("block_erchius_fuel", () -> new BlockErchiusFuelBlock());
	public static final RegistryObject<Block> BLOCK_TAR_OIL = REGISTRY.register("block_tar_oil", () -> new BlockTarOilBlock());
	public static final RegistryObject<Block> BLOCK_POISON = REGISTRY.register("block_poison", () -> new BlockPoisonBlock());
	public static final RegistryObject<Block> BLOCK_STICK_SLIME = REGISTRY.register("block_stick_slime", () -> new BlockStickSlimeBlock());
	public static final RegistryObject<Block> BLOCK_SWAMP_WATER = REGISTRY.register("block_swamp_water", () -> new BlockSwampWaterBlock());
	public static final RegistryObject<Block> BLOCK_WATER = REGISTRY.register("block_water", () -> new BlockWaterBlock());
	public static final RegistryObject<Block> COCONUT_MILK = REGISTRY.register("coconut_milk", () -> new CoconutMilkBlock());
	public static final RegistryObject<Block> LAVA = REGISTRY.register("lava", () -> new LavaBlock());
	public static final RegistryObject<Block> BLOCK_COCONUT_MILK = REGISTRY.register("block_coconut_milk", () -> new BlockCoconutMilkBlock());
	public static final RegistryObject<Block> BLOCK_LAVA = REGISTRY.register("block_lava", () -> new BlockLavaBlock());
	public static final RegistryObject<Block> HEALING_WATER = REGISTRY.register("healing_water", () -> new HealingWaterBlock());
	public static final RegistryObject<Block> BLOCK_HEALING_WATER = REGISTRY.register("block_healing_water", () -> new BlockHealingWaterBlock());
	public static final RegistryObject<Block> GENERATE_IN_DEPTH_1 = REGISTRY.register("generate_in_depth_1", () -> new GenerateInDepth1Block());
	public static final RegistryObject<Block> GENERATE_IN_DEPTH_2 = REGISTRY.register("generate_in_depth_2", () -> new GenerateInDepth2Block());
	public static final RegistryObject<Block> GENERATE_IN_DEPTH_3 = REGISTRY.register("generate_in_depth_3", () -> new GenerateInDepth3Block());
	public static final RegistryObject<Block> GENERATE_IN_DEPTH_4 = REGISTRY.register("generate_in_depth_4", () -> new GenerateInDepth4Block());
	public static final RegistryObject<Block> GENERATE_IN_DEPTH_5 = REGISTRY.register("generate_in_depth_5", () -> new GenerateInDepth5Block());
	public static final RegistryObject<Block> GENERATE_IN_DEPTH_6 = REGISTRY.register("generate_in_depth_6", () -> new GenerateInDepth6Block());
	public static final RegistryObject<Block> ASTEROID_METEORITEROCK = REGISTRY.register("asteroid_meteoriterock", () -> new AsteroidMeteoriterockBlock());
	public static final RegistryObject<Block> CHAINLINKFENCE = REGISTRY.register("chainlinkfence", () -> new ChainlinkfenceBlock());
	public static final RegistryObject<Block> CHARREDMETALPLATES = REGISTRY.register("charredmetalplates", () -> new CharredmetalplatesBlock());
	public static final RegistryObject<Block> CHARREDMETALPLATING = REGISTRY.register("charredmetalplating", () -> new CharredmetalplatingBlock());
	public static final RegistryObject<Block> DARKGLASS = REGISTRY.register("darkglass", () -> new DarkglassBlock());
	public static final RegistryObject<Block> DARKGLASSPANE = REGISTRY.register("darkglasspane", () -> new DarkglasspaneBlock());
	public static final RegistryObject<Block> DRYROCK = REGISTRY.register("dryrock", () -> new DryrockBlock());
	public static final RegistryObject<Block> DUSTYCIRCUIT = REGISTRY.register("dustycircuit", () -> new DustycircuitBlock());
	public static final RegistryObject<Block> DUSTYGRATE = REGISTRY.register("dustygrate", () -> new DustygrateBlock());
	public static final RegistryObject<Block> DUSTYWOOD = REGISTRY.register("dustywood", () -> new DustywoodBlock());
	public static final RegistryObject<Block> GRAYPLATEDMETAL = REGISTRY.register("grayplatedmetal", () -> new GrayplatedmetalBlock());
	public static final RegistryObject<Block> MAKESHIFTMETALSHEETS = REGISTRY.register("makeshiftmetalsheets", () -> new MakeshiftmetalsheetsBlock());
	public static final RegistryObject<Block> METALICCOLUMN = REGISTRY.register("metaliccolumn", () -> new MetaliccolumnBlock());
	public static final RegistryObject<Block> METALPLAQUES = REGISTRY.register("metalplaques", () -> new MetalplaquesBlock());
	public static final RegistryObject<Block> METALPLAQUESLAB = REGISTRY.register("metalplaqueslab", () -> new MetalplaqueslabBlock());
	public static final RegistryObject<Block> METALPLAQUESTAIRS = REGISTRY.register("metalplaquestairs", () -> new MetalplaquestairsBlock());
	public static final RegistryObject<Block> METALSHEETS = REGISTRY.register("metalsheets", () -> new MetalsheetsBlock());
	public static final RegistryObject<Block> OLDGLASS = REGISTRY.register("oldglass", () -> new OldglassBlock());
	public static final RegistryObject<Block> RIVETLESSRUSTYPANEL = REGISTRY.register("rivetlessrustypanel", () -> new RivetlessrustypanelBlock());
	public static final RegistryObject<Block> RIVETRUSTYPLATING = REGISTRY.register("rivetrustyplating", () -> new RivetrustyplatingBlock());
	public static final RegistryObject<Block> RUSTEDBARS = REGISTRY.register("rustedbars", () -> new RustedbarsBlock());
	public static final RegistryObject<Block> RUSTEDCHAINLINKFENCE = REGISTRY.register("rustedchainlinkfence", () -> new RustedchainlinkfenceBlock());
	public static final RegistryObject<Block> RUSTEDPLATES = REGISTRY.register("rustedplates", () -> new RustedplatesBlock());
	public static final RegistryObject<Block> RUSTYBOLTEDPLATES = REGISTRY.register("rustyboltedplates", () -> new RustyboltedplatesBlock());
	public static final RegistryObject<Block> RUSTYGRATE = REGISTRY.register("rustygrate", () -> new RustygrateBlock());
	public static final RegistryObject<Block> RUSTYMETALPLAQUES = REGISTRY.register("rustymetalplaques", () -> new RustymetalplaquesBlock());
	public static final RegistryObject<Block> RUSTYSCAFOLDING = REGISTRY.register("rustyscafolding", () -> new RustyscafoldingBlock());
	public static final RegistryObject<Block> RUSTYWALL = REGISTRY.register("rustywall", () -> new RustywallBlock());
	public static final RegistryObject<Block> SCORCHEDCARGOPLATING = REGISTRY.register("scorchedcargoplating", () -> new ScorchedcargoplatingBlock());
	public static final RegistryObject<Block> SCORCHEDHAZARDTAPE = REGISTRY.register("scorchedhazardtape", () -> new ScorchedhazardtapeBlock());
	public static final RegistryObject<Block> SCORCHEDPLATING = REGISTRY.register("scorchedplating", () -> new ScorchedplatingBlock());
	public static final RegistryObject<Block> SCORCHEDTAPUMME = REGISTRY.register("scorchedtapumme", () -> new ScorchedtapummeBlock());
	public static final RegistryObject<Block> SLEEKDARKPANEL = REGISTRY.register("sleekdarkpanel", () -> new SleekdarkpanelBlock());
	public static final RegistryObject<Block> ERODEDMETALPANELS = REGISTRY.register("erodedmetalpanels", () -> new ErodedmetalpanelsBlock());
	public static final RegistryObject<Block> OLDGLASSPANE = REGISTRY.register("oldglasspane", () -> new OldglasspaneBlock());
	public static final RegistryObject<Block> DEBRISSLAB = REGISTRY.register("debrisslab", () -> new DebrisslabBlock());
	public static final RegistryObject<Block> BAR_SUPPORT = REGISTRY.register("bar_support", () -> new BarSupportBlock());
	public static final RegistryObject<Block> BASICTOILET = REGISTRY.register("basictoilet", () -> new BasictoiletBlock());
	public static final RegistryObject<Block> BIGBROKENDRAWER = REGISTRY.register("bigbrokendrawer", () -> new BigbrokendrawerBlock());
	public static final RegistryObject<Block> BROKENELETRICBOX = REGISTRY.register("brokeneletricbox", () -> new BrokeneletricboxBlock());
	public static final RegistryObject<Block> BROKENCOUNTER = REGISTRY.register("brokencounter", () -> new BrokencounterBlock());
	public static final RegistryObject<Block> BROKENFRIDGE = REGISTRY.register("brokenfridge", () -> new BrokenfridgeBlock());
	public static final RegistryObject<Block> BROKENRADIOCABINET = REGISTRY.register("brokenradiocabinet", () -> new BrokenradiocabinetBlock());
	public static final RegistryObject<Block> BROKENREGISTER = REGISTRY.register("brokenregister", () -> new BrokenregisterBlock());
	public static final RegistryObject<Block> BROKENSMALLDRAWER = REGISTRY.register("brokensmalldrawer", () -> new BrokensmalldrawerBlock());
	public static final RegistryObject<Block> BROKENTABLE = REGISTRY.register("brokentable", () -> new BrokentableBlock());
	public static final RegistryObject<Block> BROKENTELEVISIONSET = REGISTRY.register("brokentelevisionset", () -> new BrokentelevisionsetBlock());
	public static final RegistryObject<Block> BROKENTERMINAL = REGISTRY.register("brokenterminal", () -> new BrokenterminalBlock());
	public static final RegistryObject<Block> BROKENTRAFFICLIGHTS = REGISTRY.register("brokentrafficlights", () -> new BrokentrafficlightsBlock());
	public static final RegistryObject<Block> BROKENTRAFFICPOLE = REGISTRY.register("brokentrafficpole", () -> new BrokentrafficpoleBlock());
	public static final RegistryObject<Block> BROKENWOODENCHAIR = REGISTRY.register("brokenwoodenchair", () -> new BrokenwoodenchairBlock());
	public static final RegistryObject<Block> DECAYEDSHELF = REGISTRY.register("decayedshelf", () -> new DecayedshelfBlock());
	public static final RegistryObject<Block> DIAGONALWRECKEDVENT = REGISTRY.register("diagonalwreckedvent", () -> new DiagonalwreckedventBlock());
	public static final RegistryObject<Block> DUMPSTER = REGISTRY.register("dumpster", () -> new DumpsterBlock());
	public static final RegistryObject<Block> DUSTYWIREBOX = REGISTRY.register("dustywirebox", () -> new DustywireboxBlock());
	public static final RegistryObject<Block> FLICKERINGLIGHTBULB = REGISTRY.register("flickeringlightbulb", () -> new FlickeringlightbulbBlock());
	public static final RegistryObject<Block> HANGINGWIRES = REGISTRY.register("hangingwires", () -> new HangingwiresBlock());
	public static final RegistryObject<Block> HORIZONTALWRECKEDVENT = REGISTRY.register("horizontalwreckedvent", () -> new HorizontalwreckedventBlock());
	public static final RegistryObject<Block> LARGEBROKENMIRROR = REGISTRY.register("largebrokenmirror", () -> new LargebrokenmirrorBlock());
	public static final RegistryObject<Block> LITTLETABLE = REGISTRY.register("littletable", () -> new LittletableBlock());
	public static final RegistryObject<Block> OLDBED = REGISTRY.register("oldbed", () -> new OldbedBlock());
	public static final RegistryObject<Block> OLDPAPERS = REGISTRY.register("oldpapers", () -> new OldpapersBlock());
	public static final RegistryObject<Block> OLDPAPERS_1 = REGISTRY.register("oldpapers_1", () -> new Oldpapers1Block());
	public static final RegistryObject<Block> OLDPAPERS_2 = REGISTRY.register("oldpapers_2", () -> new Oldpapers2Block());
	public static final RegistryObject<Block> OLDPAPERS_3 = REGISTRY.register("oldpapers_3", () -> new Oldpapers3Block());
	public static final RegistryObject<Block> PAPERS = REGISTRY.register("papers", () -> new PapersBlock());
	public static final RegistryObject<Block> PIPEFENCE = REGISTRY.register("pipefence", () -> new PipefenceBlock());
	public static final RegistryObject<Block> POLETOP = REGISTRY.register("poletop", () -> new PoletopBlock());
	public static final RegistryObject<Block> RUSTEDBOILER = REGISTRY.register("rustedboiler", () -> new RustedboilerBlock());
	public static final RegistryObject<Block> RUSTED_BROKEN_FAN = REGISTRY.register("rusted_broken_fan", () -> new RustedBrokenFanBlock());
	public static final RegistryObject<Block> RUSTEDCHAIR = REGISTRY.register("rustedchair", () -> new RustedchairBlock());
	public static final RegistryObject<Block> RUSTEDCRATE = REGISTRY.register("rustedcrate", () -> new RustedcrateBlock());
	public static final RegistryObject<Block> RUSTEDOILBARREL = REGISTRY.register("rustedoilbarrel", () -> new RustedoilbarrelBlock());
	public static final RegistryObject<Block> RUSTED_TABLE = REGISTRY.register("rusted_table", () -> new RustedTableBlock());
	public static final RegistryObject<Block> RUSTEDWATERTANK = REGISTRY.register("rustedwatertank", () -> new RustedwatertankBlock());
	public static final RegistryObject<Block> RUSTYCABINET = REGISTRY.register("rustycabinet", () -> new RustycabinetBlock());
	public static final RegistryObject<Block> RUSTYDOUBLECABINET = REGISTRY.register("rustydoublecabinet", () -> new RustydoublecabinetBlock());
	public static final RegistryObject<Block> RUSTYLOCKER = REGISTRY.register("rustylocker", () -> new RustylockerBlock());
	public static final RegistryObject<Block> RUSTYSHOWER = REGISTRY.register("rustyshower", () -> new RustyshowerBlock());
	public static final RegistryObject<Block> SCORCHED_BENCH = REGISTRY.register("scorched_bench", () -> new ScorchedBenchBlock());
	public static final RegistryObject<Block> SCORCHED_BUSH = REGISTRY.register("scorched_bush", () -> new ScorchedBushBlock());
	public static final RegistryObject<Block> SCORCHED_DEBRIS = REGISTRY.register("scorched_debris", () -> new ScorchedDebrisBlock());
	public static final RegistryObject<Block> SCORCHEDGRASS = REGISTRY.register("scorchedgrass", () -> new ScorchedgrassBlock());
	public static final RegistryObject<Block> SCORCHEDTIRES = REGISTRY.register("scorchedtires", () -> new ScorchedtiresBlock());
	public static final RegistryObject<Block> SIGN_POLE = REGISTRY.register("sign_pole", () -> new SignPoleBlock());
	public static final RegistryObject<Block> SIGN_TOP = REGISTRY.register("sign_top", () -> new SignTopBlock());
	public static final RegistryObject<Block> SMALLBROKENMIRROR = REGISTRY.register("smallbrokenmirror", () -> new SmallbrokenmirrorBlock());
	public static final RegistryObject<Block> SMALLRUSTEDCRATE = REGISTRY.register("smallrustedcrate", () -> new SmallrustedcrateBlock());
	public static final RegistryObject<Block> SMALLVENT = REGISTRY.register("smallvent", () -> new SmallventBlock());
	public static final RegistryObject<Block> SMASHEDSCREEN = REGISTRY.register("smashedscreen", () -> new SmashedscreenBlock());
	public static final RegistryObject<Block> SUPPLIES_SHELF = REGISTRY.register("supplies_shelf", () -> new SuppliesShelfBlock());
	public static final RegistryObject<Block> TOXICWASTEBARREL = REGISTRY.register("toxicwastebarrel", () -> new ToxicwastebarrelBlock());
	public static final RegistryObject<Block> TRASHCAN = REGISTRY.register("trashcan", () -> new TrashcanBlock());
	public static final RegistryObject<Block> UTILITYPOLE = REGISTRY.register("utilitypole", () -> new UtilitypoleBlock());
	public static final RegistryObject<Block> WIDEVENT = REGISTRY.register("widevent", () -> new WideventBlock());
	public static final RegistryObject<Block> WRECKEDCONSOLE = REGISTRY.register("wreckedconsole", () -> new WreckedconsoleBlock());
	public static final RegistryObject<Block> WRECKEDCONTROLPANEL = REGISTRY.register("wreckedcontrolpanel", () -> new WreckedcontrolpanelBlock());
	public static final RegistryObject<Block> WRECKEDCRATE = REGISTRY.register("wreckedcrate", () -> new WreckedcrateBlock());
	public static final RegistryObject<Block> WRECKED_TV = REGISTRY.register("wrecked_tv", () -> new WreckedTVBlock());
	public static final RegistryObject<Block> WRECKEDVENDINGMACHINE = REGISTRY.register("wreckedvendingmachine", () -> new WreckedvendingmachineBlock());
	public static final RegistryObject<Block> WRECKEDVENT = REGISTRY.register("wreckedvent", () -> new WreckedventBlock());
	public static final RegistryObject<Block> SLOPEDRUSTPANEL = REGISTRY.register("slopedrustpanel", () -> new SlopedrustpanelBlock());
	public static final RegistryObject<Block> IRON_BLOCK_SLAB = REGISTRY.register("iron_block_slab", () -> new IronBlockSlabBlock());
	public static final RegistryObject<Block> RUSTYMETALPLAQUESTAIRS = REGISTRY.register("rustymetalplaquestairs", () -> new RustymetalplaquestairsBlock());
	public static final RegistryObject<Block> RUSTYMETALPLAQUESLAB = REGISTRY.register("rustymetalplaqueslab", () -> new RustymetalplaqueslabBlock());

	@Mod.EventBusSubscriber(bus = Mod.EventBusSubscriber.Bus.MOD, value = Dist.CLIENT)
	public static class ClientSideHandler {
		@SubscribeEvent
		public static void blockColorLoad(RegisterColorHandlersEvent.Block event) {
			BlockWaterBlock.blockColorLoad(event);
		}
	}
}
